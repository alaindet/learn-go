package examples

import (
	"fmt"
	"time"

	"game_of_life/core"
	"game_of_life/utils"
)

const (
	Glider          = "glider"
	GosperGliderGun = "gosper-glider-run"
	Spaceships      = "spaceships"
	Pulsar          = "pulsar"
)

var examples map[string]string = map[string]string{
	Glider: utils.JoinLines(
		"..x..................",
		"...x.................",
		".xxx.................",
		".....................",
		".....................",
		".....................",
		".....................",
		".....................",
		".....................",
		".....................",
		".....................",
		".....................",
	),
	GosperGliderGun: utils.JoinLines(
		".........................................................",
		".........................................................",
		"..................................x......................",
		"................................x.x......................",
		"......................xx......xx............xx...........",
		".....................x...x....xx............xx...........",
		"..........xx........x.....x...xx.........................",
		"..........xx........x...x.xx....x.x......................",
		"....................x.....x.......x......................",
		".....................x...................................",
		"......................xx.................................",
		".........................................................",
		".........................................................",
		".........................................................",
		".........................................................",
	),
	Spaceships: utils.JoinLines(
		"..........................",
		"..........................",
		"............xx............",
		"..........xx.xx...........",
		"..........xxxx............",
		"...........xx.............",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..............xx..........",
		"...........xxx.xx.........",
		"...........xxxxx..........",
		"............xxx...........",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..........................",
		"..............xx..........",
		"..........xxxx.xx.........",
		"..........xxxxxx..........",
		"...........xxxx...........",
		"..........................",
		"..........................",
	),
	Pulsar: utils.JoinLines(
		".................",
		".....x.....x.....",
		".....x.....x.....",
		".....xx...xx.....",
		".................",
		".xxx..xx.xx..xxx.",
		"...x.x.x.x.x.x...",
		".....xx...xx.....",
		".................",
		".....xx...xx.....",
		"...x.x.x.x.x.x...",
		".xxx..xx.xx..xxx.",
		".................",
		".....xx...xx.....",
		".....x.....x.....",
		".....x.....x.....",
		".................",
	),
}

func RunExamples(n int, d time.Duration, symbols [2]rune) {
	for name := range examples {
		RunExample(name, n, d, symbols)
	}
}

func RunExample(ex string, n int, d time.Duration, symbols [2]rune) {
	tpf, err := getTimePerFrame(n, d)

	if err != nil {
		panic(err.Error())
	}

	alive := symbols[0]
	dead := symbols[1]
	g := core.FromString('x', '.', examples[ex])
	g.SetSymbols(alive, dead)
	g.Animate(n, tpf)
}

func getTimePerFrame(frames int, totalDuration time.Duration) (time.Duration, error) {
	result := time.Duration(float64(totalDuration) / float64(frames))
	threshold := time.Millisecond * 10

	if result < threshold {
		return 0, fmt.Errorf("cannot have more than 100 frames per second")
	}

	return result, nil
}
